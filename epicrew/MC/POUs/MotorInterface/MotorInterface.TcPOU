<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MotorInterface" Id="{3bdeed02-7f2e-4b23-a1c7-53075e32d627}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK MotorInterface
VAR
	_in_PDO_adr:  POINTER TO InMotorPDO;
	_out_PDO_adr: POINTER TO OutMotorPDO;
		
	_last_position_raw		:	DINT;
	_current_position_raw	:	DINT; 	
	_feedback_position		:	LINT;
	_driver_mode			:	driver_modes_t;
	_driver_state			:	driver_states_t;

	_motor_reset_fault: BOOL;
	
	_switch_threshold:UDINT := 9_000_000;
	_encoder_range: UDINT := 18_000_000;

	_motor_enabled: BOOL;
	_initialized: BOOL := FALSE;
	_last_fault_reset_time : ULINT;
	_motor_reset_fault_flag: BOOL;
	_current_time: ULINT;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(**************Update motor status**************)
_driver_mode:=_in_PDO_adr^.fb_op_mode;
update_position(_in_PDO_adr^.fb_position);
update_statusword(_in_PDO_adr^.statusword);
IF(_motor_enabled) THEN
	(****************Reset fault check****************)
	IF _motor_reset_fault AND (_driver_state = driver_states_t.Fault OR 
		_driver_state = driver_states_t.FaultReactionActive)THEN
		set_driver_operation(state_transition_commands_t.FaultReset);
	END_IF
	(******************Power on motor*****************)
	IF(_driver_state=driver_states_t.NotReadyToSwitchOn) THEN
		set_driver_operation(state_transition_commands_t.Shutdown);
	ELSIF(_driver_state=driver_states_t.SwitchOnDisabled) THEN
		set_driver_operation(state_transition_commands_t.Shutdown);
	ELSIF(_driver_state=driver_states_t.ReadyToSwitchOn) THEN
		set_driver_operation(state_transition_commands_t.SwitchOnEnOP);
	END_IF
ELSE
	set_driver_operation(state_transition_commands_t.DisableVolt);
END_IF
_current_time:=SYSTIME_MS();
IF _motor_reset_fault THEN
	IF NOT _motor_reset_fault_flag THEN
		_motor_reset_fault_flag := TRUE;
		_out_PDO_adr^.controlword.7:=TRUE;
		_last_fault_reset_time := _current_time;
	ELSIF _current_time-_last_fault_reset_time > 500 THEN
		_motor_reset_fault_flag := FALSE;
		_out_PDO_adr^.controlword.7:=FALSE;
	END_IF
END_IF
]]></ST>
    </Implementation>
    <Property Name="base_current" Id="{4a221b80-e110-4f01-9d5d-48569ecc006f}">
      <Declaration><![CDATA[PROPERTY base_current : INT]]></Declaration>
      <Get Name="Get" Id="{126264f2-3abe-4c9f-aa7b-84c296451b6d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[base_current := _out_PDO_adr^.base_current;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b6e41fc3-e08e-451a-b4e9-f518643a7c98}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_out_PDO_adr^.base_current:=base_current;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="controlword_adr" Id="{87934bbb-0204-42d0-8ac1-897115421f25}">
      <Declaration><![CDATA[PROPERTY controlword_adr : POINTER TO UINT]]></Declaration>
      <Get Name="Get" Id="{1a92797b-39e2-4fb7-8ee6-de36850c31f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[controlword_adr:=ADR(_out_PDO_adr^.controlword);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="driver_enable" Id="{bded794b-8039-4eea-b4f0-628d9c461658}">
      <Declaration><![CDATA[PROPERTY driver_enable : BOOL]]></Declaration>
      <Get Name="Get" Id="{12d33482-2abf-4133-8c5f-06659ee42a6c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[driver_enable:=_motor_enabled;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{e8063ff0-c3c6-4c49-9d64-6bb1a31d2bf7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_motor_enabled:=driver_enable;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="driver_mode" Id="{9dfc64ef-b934-430c-9872-8934793820ff}">
      <Declaration><![CDATA[PROPERTY driver_mode : driver_modes_t]]></Declaration>
      <Get Name="Get" Id="{f7475dfd-ed87-4506-a3ff-f6f0fda6da79}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[driver_mode:=_driver_mode;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{594a2c7d-2613-49f5-9b43-fbe202c857d7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_out_PDO_adr^.motor_op_out:=TO_SINT(driver_mode);]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="driver_state" Id="{8c024c96-a805-42a9-976c-1fb43fb56652}">
      <Declaration><![CDATA[PROPERTY driver_state : driver_states_t]]></Declaration>
      <Get Name="Get" Id="{7060971f-ed94-453d-ad55-397e78dbacc4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[driver_state:=_driver_state;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="encoder_range" Id="{aa78dc28-cc7e-42a3-9ebe-f9cc901e9f4c}">
      <Declaration><![CDATA[PROPERTY encoder_range : UDINT]]></Declaration>
      <Get Name="Get" Id="{801acb59-05f1-4848-a61e-43b75ead819c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[encoder_range:=_encoder_range;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{d53fff42-4ce4-4e0f-8ee3-bcc4299b3c5a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_encoder_range:=encoder_range;
_switch_threshold:=TO_UDINT(_encoder_range/2);
]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="FB_init" Id="{330f5c3e-6948-48a6-93fb-559e3ba8cc49}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	in_PDO_adr : POINTER TO InMotorPDO;
	out_PDO_adr : POINTER TO OutMotorPDO;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_in_PDO_adr:=in_PDO_adr;
_out_PDO_adr:=out_PDO_adr;]]></ST>
      </Implementation>
    </Method>
    <Property Name="feedback_position" Id="{e4fb3cb8-8ddd-400c-88ed-4796adf57b39}">
      <Declaration><![CDATA[{attribute 'qualified_only'}
PROPERTY feedback_position : LINT
]]></Declaration>
      <Get Name="Get" Id="{e0345475-188a-4c22-a022-e872b48821ad}">
        <Declaration><![CDATA[{attribute 'qualified_only'}
VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[feedback_position:=_feedback_position;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="raw_position" Id="{4ecd139f-87cd-45ed-9b37-a32e7f91dfe1}">
      <Declaration><![CDATA[PROPERTY raw_position : DINT]]></Declaration>
      <Get Name="Get" Id="{1a6b037f-cec5-4764-abcd-4c7327f9613d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[raw_position:=_current_position_raw;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="reset_fault" Id="{5fd7b793-c56d-4d2b-87b5-a223b835ea74}">
      <Declaration><![CDATA[PROPERTY reset_fault : BOOL]]></Declaration>
      <Get Name="Get" Id="{6ff51656-bba6-4e2a-b695-782a75e2b5f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[reset_fault:=_motor_reset_fault;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{3868931e-32b5-444a-a700-9a854a902eeb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_motor_reset_fault:=reset_fault;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="reset_position" Id="{b9297a5c-2c5f-46b9-9218-b0574cb982c6}">
      <Declaration><![CDATA[METHOD reset_position : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_feedback_position:=0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="set_driver_operation" Id="{25923bea-eea1-43d7-afc2-0a275cc54c56}">
      <Declaration><![CDATA[METHOD PRIVATE set_driver_operation : BOOL
VAR_INPUT
	state_transition_command: state_transition_commands_t;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE state_transition_command OF
	Shutdown: _out_PDO_adr^.controlword:=16#06;
	SwitchOn: _out_PDO_adr^.controlword:=16#07;
	SwitchOnEnOP: _out_PDO_adr^.controlword:=16#0F;
	DisableVolt: _out_PDO_adr^.controlword:=16#00;
	QuickStop: _out_PDO_adr^.controlword:=16#02;
	DisableOP: _out_PDO_adr^.controlword:=16#07;
	EnableOP: _out_PDO_adr^.controlword:=16#0F;
	FaultReset: _out_PDO_adr^.controlword:=16#80;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="set_PP_parameters" Id="{bc73799c-a7b6-401f-a4e9-d90f908c62b0}">
      <Declaration><![CDATA[METHOD set_PP_parameters : BOOL
VAR_INPUT
	profile_velocity : UDINT;
	profile_acceleration: UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_out_PDO_adr^.profile_vel:=profile_velocity;
_out_PDO_adr^.profile_accel:=profile_acceleration;
_out_PDO_adr^.profile_decel:=profile_acceleration;]]></ST>
      </Implementation>
    </Method>
    <Property Name="statusword" Id="{a84a575d-a632-41fe-bfd9-22f979cfa1f5}">
      <Declaration><![CDATA[PROPERTY statusword : UINT]]></Declaration>
      <Get Name="Get" Id="{d54770dc-3c77-4642-abf8-868f86f932f8}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[statusword:=_in_PDO_adr^.statusword;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="target_position" Id="{2085921f-04e4-4ed9-ab36-6f3b356d6590}">
      <Declaration><![CDATA[PROPERTY target_position : DINT]]></Declaration>
      <Get Name="Get" Id="{20214f18-b0e7-4ecd-8283-4c3f439556f2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[target_position:=_out_PDO_adr^.target_positon;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{3df66b03-aaf2-47db-8b5c-14356d87698f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_out_PDO_adr^.target_positon:=target_position;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="update_position" Id="{0f75cc23-033e-4ce7-9f7e-98c653cfb592}">
      <Declaration><![CDATA[METHOD PRIVATE update_position : BOOL
(**********Update Position**********
@brief:	Update the position of motor from the signal from motor. Since the
		encoder has limited value range, when the value exceeding the maxi-
		mum value, it will jumps to the minimum value. This method will un-
		wrap the value to ensure the feedback position is continuous.
@param:	statusword	[in] The DINT value from motor PDO.
					which the EtherCAT index should be 0x6064:00, 0x6864:00
*)
VAR_INPUT
	motor_position_raw: DINT;
END_VAR
VAR
	angle_offset: DINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF(NOT _initialized) THEN
	_last_position_raw := motor_position_raw;
	_feedback_position := motor_position_raw;
	_initialized := TRUE;
END_IF
_current_position_raw := motor_position_raw;
angle_offset := _current_position_raw - _last_position_raw;
IF (ABS(angle_offset) > _switch_threshold) THEN
	angle_offset := angle_offset - angle_offset/ABS(angle_offset)*_encoder_range;
END_IF
_feedback_position := _feedback_position+angle_offset;
_last_position_raw := _current_position_raw;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="update_rounds" Id="{af9f09bf-a2de-4670-bb6f-12636744949e}">
      <Declaration><![CDATA[METHOD update_rounds : BOOL
VAR_INPUT
	round_count : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_feedback_position := _feedback_position + round_count * _encoder_range;]]></ST>
      </Implementation>
    </Method>
    <Method Name="update_statusword" Id="{dd240f07-2022-46bd-8070-20e2c2b30fb8}">
      <Declaration><![CDATA[METHOD PRIVATE update_statusword
(**********Update Statusword**********
@brief:	Translate statuswords to motor driver states,
		the translated statuswords is stored in the 
		driver_state variable.
@param:	statusword	[in] The UINT value from motor PDO.
					which the EtherCAT index should be 0x6041:00, 0x6841:00
*)
VAR_INPUT
	statusword: UINT;
END_VAR
VAR
	status_bits: USINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*State process part*)
// The bit 0-6 of statusword indicates the status output.
// To get the status state, we first shift one bit left,
// then crop and finally shift the bit back. 
// 1. xxxx xxxx xxxx xxxx           ->           2. xxxx xxxx xxxx xxx0 ->
//               |------|   left shift 1 bit                 |  Crop  |  
//             What we want                                  with SINT
// 3. xxxx xxx0                     ->           4. 0xxx xxxx
//   Cropped data          right shift one bit       Result
status_bits := SHR(TO_USINT(SHL(statusword,1)),1);
// Switch case for the status output, refer to AZD user manual pp.55.
CASE status_bits OF
	16#00:			_driver_state:=driver_states_t.NotReadyToSwitchOn;
	16#28,16#38:	_driver_state:=driver_states_t.Fault;
	16#2F,16#3F:	_driver_state:=driver_states_t.FaultReactionActive;
	16#60,16#70:	_driver_state:=driver_states_t.SwitchOnDisabled;
	16#21,16#31:	_driver_state:=driver_states_t.ReadyToSwitchOn;
	16#23,16#33:	_driver_state:=driver_states_t.SwitchedOn;
	16#27,16#37:	_driver_state:=driver_states_t.OperationEnabled;
	16#07,16#17:	_driver_state:=driver_states_t.QuickStopActive;
ELSE
	_driver_state := driver_states_t.FOO;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="MotorInterface">
      <LineId Id="1161" Count="31" />
      <LineId Id="671" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.base_current.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.base_current.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.controlword_adr.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.driver_enable.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.driver_enable.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.driver_mode.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.driver_mode.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.driver_state.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.encoder_range.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.encoder_range.Set">
      <LineId Id="2" Count="0" />
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="MotorInterface.FB_init">
      <LineId Id="25" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.feedback_position.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.raw_position.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.reset_fault.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.reset_fault.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.reset_position">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.set_driver_operation">
      <LineId Id="10" Count="8" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.set_PP_parameters">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="1" />
    </LineIds>
    <LineIds Name="MotorInterface.statusword.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.target_position.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.target_position.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.update_position">
      <LineId Id="76" Count="1" />
      <LineId Id="103" Count="0" />
      <LineId Id="78" Count="7" />
      <LineId Id="5" Count="0" />
      <LineId Id="87" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.update_rounds">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="MotorInterface.update_statusword">
      <LineId Id="34" Count="21" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>